{"version":3,"sources":["components/Form.js","components/FilterButton.js","components/Todo.js","App.js","index.js"],"names":["Form","props","useState","name","setName","onSubmit","e","preventDefault","trim","addTask","className","htmlFor","type","id","autoComplete","value","onChange","target","FilterButton","aria-pressed","isPressed","onClick","setFilter","Todo","isEditing","setEditing","newName","setNewName","editFieldRef","useRef","editButtonRef","wasEditing","ref","useEffect","current","usePrevious","editingTemplate","editTask","Button","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","initialValue","React","setValue","toggle","useCallback","v","useModal","isOn","toggleIsOn","isAboutVisible","setAboutVisible","isDescriptionVisible","setDescriptionVisible","isCheckListVisible","setCheckListVisible","isLoggedin","setLoggedIn","username","setUsername","password","setPassword","isFailedLogin","setFailedLogin","updatedTasks","map","remainingTasks","editedTaskList","taskList","key","filterList","tasksNoun","length","headingText","listHeadingRef","prevTaskLength","Modal","show","onHide","Header","Title","Body","InputGroup","style","display","flexDirection","FormControl","marginBottom","event","placeholder","aria-label","aria-describedby","Footer","marginRight","variant","justifyContent","disabled","newTask","nanoid","tabIndex","role","aria-labelledby","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1824fe4b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Form(props) {\n  const [name, setName] = useState('');\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!name.trim()) {\n      return;\n    }\n    props.addTask(name);\n    setName(\"\");\n  }\n\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2 className=\"label-wrapper\">\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n          Create a task\n        </label>\n      </h2>\n\n      <input\n        type=\"text\"\n        id=\"new-todo-input\"\n        className=\"input input__lg\"\n        name=\"text\"\n        autoComplete=\"off\"\n        value={name}\n        onChange={handleChange}\n      />\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n        Add\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\n\nfunction FilterButton(props) {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn toggle-btn\"\n      aria-pressed={props.isPressed}\n      onClick={() => props.setFilter(props.name)}\n    >\n      <span className=\"visually-hidden\">Show </span>\n      <span>{props.name}</span>\n      <span className=\"visually-hidden\"> tasks</span>\n    </button>\n  );\n}\n\nexport default FilterButton;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\n\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default function Todo(props) {\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n  const wasEditing = usePrevious(isEditing);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!newName.trim()) {\n      return;\n    }\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New name for {props.name}\n        </label>\n        <input\n          id={props.id}\n          className=\"todo-text\"\n          type=\"text\"\n          value={newName || props.name}\n          onChange={handleChange}\n          ref={editFieldRef}\n        />\n      </div>\n      <div className=\"btn-group\">\n\n        <Button\n          type=\"Button\"\n          className=\"btn todo-cancel\"\n          onClick={() => setEditing(false)}\n        >\n          Cancel\n          <span className=\"visually-hidden\">renaming {props.name}</span>\n        </Button>\n        <Button type=\"submit\" className=\"btn btn__primary todo-edit\">\n          Save\n          <span className=\"visually-hidden\">new name for {props.name}</span>\n        </Button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n          <input\n            id={props.id}\n            type=\"checkbox\"\n            defaultChecked={props.completed}\n            onChange={() => props.toggleTaskCompleted(props.id)}\n          />\n          <label className=\"todo-label\" htmlFor={props.id}>\n            {props.name}\n          </label>\n        </div>\n        <div className=\"btn-group\">\n        <Button\n          type=\"Button\"\n          className=\"btn\"\n          onClick={() => setEditing(true)}\n          ref={editButtonRef}\n          >\n            Edit <span className=\"visually-hidden\">{props.name}</span>\n          </Button>\n          <Button\n            type=\"Button\"\n            className=\"btn btn__danger\"\n            onClick={() => props.deleteTask(props.id)}\n          >\n            Delete <span className=\"visually-hidden\">{props.name}</span>\n          </Button>\n        </div>\n    </div>\n  );\n\n\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n\n\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\nimport {FormControl, Button, Modal, InputGroup } from 'react-bootstrap';\n\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n  const [isOn, toggleIsOn] = useModal();\n  const [isAboutVisible, setAboutVisible] = useState(false);\n  const [isDescriptionVisible, setDescriptionVisible] = useState(false);\n  const [isCheckListVisible, setCheckListVisible] = useState(false);\n  const [isLoggedin, setLoggedIn] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isFailedLogin, setFailedLogin] = useState(false);\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new obkect\n        // whose `completed` prop has been inverted\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function useModal(initialValue = false) {\n    const [value, setValue] = React.useState(initialValue);\n    const toggle = React.useCallback(() => {\n      setValue(v => !v);\n    }, []);\n    return [value, toggle];\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n    // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  const taskList = tasks\n  .filter(FILTER_MAP[filter])\n  .map(task => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  ));\n\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  function validateLogin() {\n    if(username && (username === \"demouser\" || username === \"testuser\")) {\n      if(password && (password === \"ThisIsForWPClass\" || password === \"test1234\")) {\n        setLoggedIn(true)\n        toggleIsOn()\n        setFailedLogin(false)\n      } else {\n        setFailedLogin(true)\n      }\n    } else {\n      setFailedLogin(true)\n    }\n  }\n\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  return (\n    <div>\n        <Modal show={isOn} className=\"todoapp stack-large\" onHide={toggleIsOn}>\n          <Modal.Header>\n            <Modal.Title>Log In</Modal.Title>\n          </Modal.Header>\n           <br/>\n          <Modal.Body>\n            <InputGroup className=\"mb-3\">\n              <div style={{display: \"flex\", flexDirection: \"column\"}}>\n                <FormControl style={{marginBottom: \"10px\"}}\n                  onChange={event => setUsername(event.target.value)}\n                  placeholder=\"Username\"\n                  aria-label=\"Username\"\n                  aria-describedby=\"basic-addon1\"\n                />\n                <FormControl\n                  onChange={event => setPassword(event.target.value)}\n                  placeholder=\"Password\"\n                  aria-label=\"Password\"\n                  aria-describedby=\"basic-addon1\"\n                />\n                {isFailedLogin ? <h4>Incorrect username/password. Please try again.</h4> : null}\n              </div>\n              <br/>\n            </InputGroup>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button style={{marginRight: \"10px\"}} variant=\"secondary\" onClick={() => {toggleIsOn()\n               setFailedLogin(false)}}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={() => validateLogin()}>\n              Submit\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <Modal show={isDescriptionVisible || isAboutVisible || isCheckListVisible} className=\"todoapp stack-large\" onHide={toggleIsOn}>\n          <Modal.Header>\n            {isAboutVisible ? <Modal.Title><h2>About</h2></Modal.Title> : null}\n            {isDescriptionVisible ? <Modal.Title><h2>Description</h2></Modal.Title> : null}\n            {isCheckListVisible ? <Modal.Title><h2>Checklist</h2></Modal.Title> : null}\n          </Modal.Header>\n          <br/>\n          <Modal.Body>\n              {isAboutVisible ? <Modal.Title>\n                <h3>Section 1 - About who you are</h3>\n                Hello! I am Ashwin Pilgaonkar, currently pursuing Master’s in Computer Science at GSU.\n                I currently work as a Graduate Research Assistant with Application Solutions at the Instructional Innovation and Technology department.\n                I have 3 years of work experience as a Software Engineer, working across multiple domains - mobile as well as frontend and backend applications.\n\n                <h3>Section 2 - Project Description / Why I chose this project</h3>\n                To be honest, I had a ton of things to work on simultaneously over the last month so I decided to note them down in case I forgot any of them.\n                That's when it struck me --- Hey, why not make a to-do website for my web programming project!\n\n\n                <h3>Section 3 - Technologies used</h3>\n                HTML, CSS, JavaScript, React.js, Firebase\n\n                <h3>Section 4 -  What I learned in this class</h3>\n                As a Software Engineer who started his journey into Web Development fairly recently in 2018, \n                I started working directly with modern frontend frameworks such as React.\n                From this course, I learnt how to work with legacy web technologies such as JQuery and WordPress.\n                Although these technologies aren't as widely used in the industry anymore, learning to use them\n                does give one a better understanding as to what goes on under the hood in newer frameworks such as React.\n\n              </Modal.Title> : null}\n              {isDescriptionVisible ? <Modal.Title>\n                This is a simple website that allows users to add tasks to a list and stores them if the user is logged in.\n                It is free and open for anyone to use.\n              </Modal.Title> : null}\n              {isCheckListVisible ? <Modal.Title>\n                Database usage: When logged in, the task list is pulled from the FireStore database\n                <br/><br/>\n                Ajax usage: The homepage (when logged in) uses async JavaScript (promises, since Ajax is a jquery feature) to pull the task-list from the FireStore database\n                <br/><br/>\n                Theme: All pages of the website use a consistent theme\n                <br/><br/>\n                New Library Usage: Used Firebase authentication and storage libraries to handle auth and db storage\n                <br/><br/>\n                Javascript Usage: Used Javascript to add dynamic functionality present on the homescreen. Also, error handling added for failed login attempts\n                <br/><br/>\n                Membership Area: Only logged in users can store their tasks as well as access the About / Description / Checklist pages\n                <br/><br/>\n                General User: Created a user with login: demouser and password: ThisIsForWPClass\n                <br/><br/>\n              </Modal.Title> : null}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => {\n                setDescriptionVisible(false)\n                setAboutVisible(false)\n                setCheckListVisible(false)\n              }}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      {\n        !isOn && !isAboutVisible && !isCheckListVisible && !isDescriptionVisible ?\n        <div className=\"todoapp stack-large\">\n        <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\"}}>\n          <Button disabled={isLoggedin} onClick={toggleIsOn} variant=\"link\">Log in</Button>\n          <Button onClick={() => {isLoggedin ? setAboutVisible(true) : toggleIsOn()} } variant=\"link\">About</Button>\n          <Button onClick={() => {isLoggedin ? setCheckListVisible(true) : toggleIsOn()} } variant=\"link\">Checklist</Button>\n          <Button onClick={() => {isLoggedin ? setDescriptionVisible(true) : toggleIsOn()} } variant=\"link\">Description</Button>\n          {/* <Button onClick={() => {setAboutVisible(true)} } variant=\"link\">About</Button>\n          <Button onClick={() => {setCheckListVisible(true)} } variant=\"link\">Checklist</Button>\n          <Button onClick={() => {setDescriptionVisible(true)} } variant=\"link\">Description</Button> */}\n        </div>\n        <Form addTask={addTask} />\n        <div className=\"filters btn-group stack-exception\">\n          {filterList}\n        </div>\n        <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n          {headingText}\n        </h2>\n        <ul\n          role=\"list\"\n          className=\"todo-list stack-large stack-exception\"\n          aria-labelledby=\"list-heading\"\n        >\n          {taskList}\n        </ul>\n        <br/><br/><span>Ashwin Pilgaonkar</span>\n    </div>\n        :\n        null\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nconst DATA = [\n  { id: \"todo-0\", name: \"Eat\", completed: true },\n  { id: \"todo-1\", name: \"Sleep\", completed: false },\n  { id: \"todo-2\", name: \"Repeat\", completed: false }\n];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DATA} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}