{"version":3,"sources":["components/Form.js","components/FilterButton.js","components/Todo.js","App.js","index.js"],"names":["Form","props","useState","name","setName","onSubmit","e","preventDefault","trim","addTask","className","htmlFor","type","id","autoComplete","value","onChange","target","FilterButton","aria-pressed","isPressed","onClick","setFilter","Todo","isEditing","setEditing","newName","setNewName","editFieldRef","useRef","editButtonRef","wasEditing","ref","useEffect","current","usePrevious","editingTemplate","editTask","Button","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","initialValue","React","setValue","toggle","useCallback","v","useModal","isOn","toggleIsOn","isAboutVisible","setAboutVisible","isDescriptionVisible","setDescriptionVisible","isCheckListVisible","setCheckListVisible","isLoggedin","setLoggedIn","username","setUsername","password","setPassword","updatedTasks","map","remainingTasks","editedTaskList","taskList","key","filterList","tasksNoun","length","headingText","listHeadingRef","prevTaskLength","Modal","show","onHide","Header","Title","Body","InputGroup","style","display","flexDirection","FormControl","marginBottom","event","placeholder","aria-label","aria-describedby","Footer","marginRight","variant","justifyContent","disabled","newTask","nanoid","tabIndex","role","aria-labelledby","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPA4CeA,MA1Cf,SAAcC,GACZ,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAiBA,OACE,0BAAMC,SAfR,SAAsBC,GACpBA,EAAEC,iBACGJ,EAAKK,SAGVP,EAAMQ,QAAQN,GACdC,EAAQ,OAUN,wBAAIM,UAAU,iBACZ,2BAAOC,QAAQ,iBAAiBD,UAAU,aAA1C,kBAKF,2BACEE,KAAK,OACLC,GAAG,iBACHH,UAAU,kBACVP,KAAK,OACLW,aAAa,MACbC,MAAOZ,EACPa,SAnBN,SAAsBV,GACpBF,EAAQE,EAAEW,OAAOF,UAoBf,4BAAQH,KAAK,SAASF,UAAU,4BAAhC,SCpBSQ,MAff,SAAsBjB,GACpB,OACE,4BACEW,KAAK,SACLF,UAAU,iBACVS,eAAclB,EAAMmB,UACpBC,QAAS,kBAAMpB,EAAMqB,UAAUrB,EAAME,QAErC,0BAAMO,UAAU,mBAAhB,SACA,8BAAOT,EAAME,MACb,0BAAMO,UAAU,mBAAhB,Y,QCAS,SAASa,EAAKtB,GAC3B,MAAgCC,oBAAS,GAAzC,mBAAOsB,EAAP,KAAkBC,EAAlB,KACA,EAA8BvB,mBAAS,IAAvC,mBAAOwB,EAAP,KAAgBC,EAAhB,KAEMC,EAAeC,iBAAO,MACtBC,EAAgBD,iBAAO,MAEvBE,EAfR,SAAqBhB,GACnB,IAAMiB,EAAMH,mBAIZ,OAHAI,qBAAU,WACRD,EAAIE,QAAUnB,KAETiB,EAAIE,QAUQC,CAAYX,GAgB/B,IAAMY,EACJ,0BAAM1B,UAAU,cAAcL,SAXhC,SAAsBC,GACpBA,EAAEC,iBACGmB,EAAQlB,SAGbP,EAAMoC,SAASpC,EAAMY,GAAIa,GACzBC,EAAW,IACXF,GAAW,MAKT,yBAAKf,UAAU,cACb,2BAAOA,UAAU,aAAaC,QAASV,EAAMY,IAA7C,gBACgBZ,EAAME,MAEtB,2BACEU,GAAIZ,EAAMY,GACVH,UAAU,YACVE,KAAK,OACLG,MAAOW,GAAWzB,EAAME,KACxBa,SAzBR,SAAsBV,GACpBqB,EAAWrB,EAAEW,OAAOF,QAyBdiB,IAAKJ,KAGT,yBAAKlB,UAAU,aAEb,kBAAC4B,EAAA,EAAD,CACE1B,KAAK,SACLF,UAAU,kBACVW,QAAS,kBAAMI,GAAW,KAH5B,SAME,0BAAMf,UAAU,mBAAhB,YAA4CT,EAAME,OAEpD,kBAACmC,EAAA,EAAD,CAAQ1B,KAAK,SAASF,UAAU,8BAAhC,OAEE,0BAAMA,UAAU,mBAAhB,gBAAgDT,EAAME,SAMxDoC,EACJ,yBAAK7B,UAAU,eACb,yBAAKA,UAAU,QACX,2BACEG,GAAIZ,EAAMY,GACVD,KAAK,WACL4B,eAAgBvC,EAAMwC,UACtBzB,SAAU,kBAAMf,EAAMyC,oBAAoBzC,EAAMY,OAElD,2BAAOH,UAAU,aAAaC,QAASV,EAAMY,IAC1CZ,EAAME,OAGX,yBAAKO,UAAU,aACf,kBAAC4B,EAAA,EAAD,CACE1B,KAAK,SACLF,UAAU,MACVW,QAAS,kBAAMI,GAAW,IAC1BO,IAAKF,GAJP,QAMS,0BAAMpB,UAAU,mBAAmBT,EAAME,OAEhD,kBAACmC,EAAA,EAAD,CACE1B,KAAK,SACLF,UAAU,kBACVW,QAAS,kBAAMpB,EAAM0C,WAAW1C,EAAMY,MAHxC,UAKS,0BAAMH,UAAU,mBAAmBT,EAAME,SAiB1D,OAVA8B,qBAAU,YACHF,GAAcP,GACjBI,EAAaM,QAAQU,QAEnBb,IAAeP,GACjBM,EAAcI,QAAQU,UAEvB,CAACb,EAAYP,IAGT,wBAAId,UAAU,QAAQc,EAAYY,EAAkBG,G,oCChG7D,IAAMM,EAAa,CACjBC,IAAK,kBAAM,GACXC,OAAQ,SAAAC,GAAI,OAAKA,EAAKP,WACtBQ,UAAW,SAAAD,GAAI,OAAIA,EAAKP,YAGpBS,EAAeC,OAAOC,KAAKP,GA6LlBQ,MA3Lf,SAAapD,GACX,MAA0BC,mBAASD,EAAMqD,OAAzC,mBAAOA,EAAP,KAAcC,EAAd,KACA,EAA4BrD,mBAAS,OAArC,mBAAOsD,EAAP,KAAelC,EAAf,KACA,EAqBA,WAAyC,IAAvBmC,EAAsB,wDACtC,EAA0BC,IAAMxD,SAASuD,GAAzC,mBAAO1C,EAAP,KAAc4C,EAAd,KACMC,EAASF,IAAMG,aAAY,WAC/BF,GAAS,SAAAG,GAAC,OAAKA,OACd,IACH,MAAO,CAAC/C,EAAO6C,GA1BUG,GAA3B,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0C/D,oBAAS,GAAnD,mBAAOgE,EAAP,KAAuBC,EAAvB,KACA,EAAsDjE,oBAAS,GAA/D,mBAAOkE,EAAP,KAA6BC,EAA7B,KACA,EAAkDnE,oBAAS,GAA3D,mBAAOoE,EAAP,KAA2BC,EAA3B,KACA,EAAkCrE,oBAAS,GAA3C,mBAAOsE,EAAP,KAAmBC,EAAnB,KACA,EAAgCvE,mBAAS,IAAzC,mBAAOwE,EAAP,KAAiBC,EAAjB,KACA,EAAgCzE,mBAAS,IAAzC,mBAAO0E,EAAP,KAAiBC,EAAjB,KAEA,SAASnC,EAAoB7B,GAC3B,IAAMiE,EAAexB,EAAMyB,KAAI,SAAA/B,GAE7B,OAAInC,IAAOmC,EAAKnC,GAGP,2BAAImC,GAAX,IAAiBP,WAAYO,EAAKP,YAE7BO,KAETO,EAASuB,GAWX,SAASnC,EAAW9B,GAClB,IAAMmE,EAAiB1B,EAAME,QAAO,SAAAR,GAAI,OAAInC,IAAOmC,EAAKnC,MACxD0C,EAASyB,GAIX,SAAS3C,GAASxB,EAAIa,GACpB,IAAMuD,EAAiB3B,EAAMyB,KAAI,SAAA/B,GAE/B,OAAInC,IAAOmC,EAAKnC,GAEP,2BAAImC,GAAX,IAAiB7C,KAAMuB,IAElBsB,KAETO,EAAS0B,GAGX,IAAMC,GAAW5B,EAChBE,OAAOX,EAAWW,IAClBuB,KAAI,SAAA/B,GAAI,OACP,kBAACzB,EAAD,CACEV,GAAImC,EAAKnC,GACTV,KAAM6C,EAAK7C,KACXsC,UAAWO,EAAKP,UAChB0C,IAAKnC,EAAKnC,GACV6B,oBAAqBA,EACrBC,WAAYA,EACZN,SAAUA,QAIR+C,GAAalC,EAAa6B,KAAI,SAAA5E,GAAI,OACtC,kBAAC,EAAD,CACEgF,IAAKhF,EACLA,KAAMA,EACNiB,UAAWjB,IAASqD,EACpBlC,UAAWA,OAmBT+D,GAAgC,IAApBH,GAASI,OAAe,QAAU,OAC9CC,GAAW,UAAML,GAASI,OAAf,YAAyBD,GAAzB,cAEXG,GAAiB3D,iBAAO,MACxB4D,GA5GR,SAAqB1E,GACnB,IAAMiB,EAAMH,mBAIZ,OAHAI,qBAAU,WACRD,EAAIE,QAAUnB,KAETiB,EAAIE,QAuGYC,CAAYmB,EAAMgC,QAQzC,OANArD,qBAAU,WACJqB,EAAMgC,OAASG,MAAoB,GACrCD,GAAetD,QAAQU,UAExB,CAACU,EAAMgC,OAAQG,KAGhB,6BACI,kBAACC,EAAA,EAAD,CAAOC,KAAM3B,EAAMtD,UAAU,sBAAsBkF,OAAQ3B,GAC3D,kBAACyB,EAAA,EAAMG,OAAP,KACE,kBAACH,EAAA,EAAMI,MAAP,gBAEF,6BACA,kBAACJ,EAAA,EAAMK,KAAP,KACA,kBAACC,EAAA,EAAD,CAAYtF,UAAU,QACxB,yBAAKuF,MAAO,CAACC,QAAS,OAAQC,cAAe,WAC3C,kBAACC,EAAA,EAAD,CAAaH,MAAO,CAACI,aAAc,QACjCrF,SAAU,SAAAsF,GAAK,OAAI3B,EAAY2B,EAAMrF,OAAOF,QAC5CwF,YAAY,WACZC,aAAW,WACXC,mBAAiB,iBAEnB,kBAACL,EAAA,EAAD,CACEpF,SAAU,SAAAsF,GAAK,OAAIzB,EAAYyB,EAAMrF,OAAOF,QAC5CwF,YAAY,WACZC,aAAW,WACXC,mBAAiB,kBAGrB,+BAGE,kBAACf,EAAA,EAAMgB,OAAP,KACE,kBAACpE,EAAA,EAAD,CAAQ2D,MAAO,CAACU,YAAa,QAASC,QAAQ,YAAYvF,QAAS4C,GAAnE,SAGA,kBAAC3B,EAAA,EAAD,CAAQsE,QAAQ,UAAUvF,QAAS,WAnDtCqD,GAAyB,aAAbA,GACVE,GAAyB,aAAbA,IACbH,GAAY,GACZR,OAgDE,YAKJ,kBAACyB,EAAA,EAAD,CAAOC,KAAMvB,GAAwBF,GAAkBI,EAAoB5D,UAAU,sBAAsBkF,OAAQ3B,GACjH,kBAACyB,EAAA,EAAMG,OAAP,KACG3B,EAAiB,kBAACwB,EAAA,EAAMI,MAAP,cAAmC,KACpD1B,EAAuB,kBAACsB,EAAA,EAAMI,MAAP,oBAAyC,KAChExB,EAAqB,kBAACoB,EAAA,EAAMI,MAAP,kBAAuC,MAE/D,6BACA,kBAACJ,EAAA,EAAMK,KAAP,aAGA,kBAACL,EAAA,EAAMgB,OAAP,KACE,kBAACpE,EAAA,EAAD,CAAQsE,QAAQ,YAAYvF,QAAS,WACjCgD,GAAsB,GACtBF,GAAgB,GAChBI,GAAoB,KAHxB,WAUDP,GAASE,GAAmBI,GAAuBF,EAyBpD,KAxBA,yBAAK1D,UAAU,uBACf,yBAAKuF,MAAO,CAACC,QAAS,OAAQC,cAAe,MAAOU,eAAgB,iBAClE,kBAACvE,EAAA,EAAD,CAAQwE,SAAUtC,EAAYnD,QAAS4C,EAAY2C,QAAQ,QAA3D,UACA,kBAACtE,EAAA,EAAD,CAAQjB,QAAS,WAAOmD,EAAaL,GAAgB,GAAQF,KAAgB2C,QAAQ,QAArF,SACA,kBAACtE,EAAA,EAAD,CAAQjB,QAAS,WAAOmD,EAAaD,GAAoB,GAAQN,KAAgB2C,QAAQ,QAAzF,aACA,kBAACtE,EAAA,EAAD,CAAQjB,QAAS,WAAOmD,EAAaH,GAAsB,GAAQJ,KAAgB2C,QAAQ,QAA3F,gBAEF,kBAAC,EAAD,CAAMnG,QA3FZ,SAAiBN,GACf,IAAM4G,EAAU,CAAElG,GAAI,QAAUmG,cAAU7G,KAAMA,EAAMsC,WAAW,GACjEc,EAAS,GAAD,mBAAKD,GAAL,CAAYyD,QA0FhB,yBAAKrG,UAAU,qCACZ0E,IAEH,wBAAIvE,GAAG,eAAeoG,SAAS,KAAKjF,IAAKwD,IACtCD,IAEH,wBACE2B,KAAK,OACLxG,UAAU,wCACVyG,kBAAgB,gBAEfjC,IAEH,6BAAK,6BAAK,sDC9LlBkC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,CAAKhE,MARI,CACX,CAAEzC,GAAI,SAAUV,KAAM,MAAOsC,WAAW,GACxC,CAAE5B,GAAI,SAAUV,KAAM,QAASsC,WAAW,GAC1C,CAAE5B,GAAI,SAAUV,KAAM,SAAUsC,WAAW,OAO3C8E,SAASC,eAAe,W","file":"static/js/main.2b520887.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Form(props) {\n  const [name, setName] = useState('');\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!name.trim()) {\n      return;\n    }\n    props.addTask(name);\n    setName(\"\");\n  }\n\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2 className=\"label-wrapper\">\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n          Create a task\n        </label>\n      </h2>\n\n      <input\n        type=\"text\"\n        id=\"new-todo-input\"\n        className=\"input input__lg\"\n        name=\"text\"\n        autoComplete=\"off\"\n        value={name}\n        onChange={handleChange}\n      />\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n        Add\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\n\nfunction FilterButton(props) {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn toggle-btn\"\n      aria-pressed={props.isPressed}\n      onClick={() => props.setFilter(props.name)}\n    >\n      <span className=\"visually-hidden\">Show </span>\n      <span>{props.name}</span>\n      <span className=\"visually-hidden\"> tasks</span>\n    </button>\n  );\n}\n\nexport default FilterButton;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\n\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default function Todo(props) {\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n  const wasEditing = usePrevious(isEditing);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!newName.trim()) {\n      return;\n    }\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New name for {props.name}\n        </label>\n        <input\n          id={props.id}\n          className=\"todo-text\"\n          type=\"text\"\n          value={newName || props.name}\n          onChange={handleChange}\n          ref={editFieldRef}\n        />\n      </div>\n      <div className=\"btn-group\">\n\n        <Button\n          type=\"Button\"\n          className=\"btn todo-cancel\"\n          onClick={() => setEditing(false)}\n        >\n          Cancel\n          <span className=\"visually-hidden\">renaming {props.name}</span>\n        </Button>\n        <Button type=\"submit\" className=\"btn btn__primary todo-edit\">\n          Save\n          <span className=\"visually-hidden\">new name for {props.name}</span>\n        </Button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n          <input\n            id={props.id}\n            type=\"checkbox\"\n            defaultChecked={props.completed}\n            onChange={() => props.toggleTaskCompleted(props.id)}\n          />\n          <label className=\"todo-label\" htmlFor={props.id}>\n            {props.name}\n          </label>\n        </div>\n        <div className=\"btn-group\">\n        <Button\n          type=\"Button\"\n          className=\"btn\"\n          onClick={() => setEditing(true)}\n          ref={editButtonRef}\n          >\n            Edit <span className=\"visually-hidden\">{props.name}</span>\n          </Button>\n          <Button\n            type=\"Button\"\n            className=\"btn btn__danger\"\n            onClick={() => props.deleteTask(props.id)}\n          >\n            Delete <span className=\"visually-hidden\">{props.name}</span>\n          </Button>\n        </div>\n    </div>\n  );\n\n\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n\n\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\nimport {FormControl, Button, Modal, InputGroup } from 'react-bootstrap';\n\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n  const [isOn, toggleIsOn] = useModal();\n  const [isAboutVisible, setAboutVisible] = useState(false);\n  const [isDescriptionVisible, setDescriptionVisible] = useState(false);\n  const [isCheckListVisible, setCheckListVisible] = useState(false);\n  const [isLoggedin, setLoggedIn] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new obkect\n        // whose `completed` prop has been inverted\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function useModal(initialValue = false) {\n    const [value, setValue] = React.useState(initialValue);\n    const toggle = React.useCallback(() => {\n      setValue(v => !v);\n    }, []);\n    return [value, toggle];\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n    // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  const taskList = tasks\n  .filter(FILTER_MAP[filter])\n  .map(task => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  ));\n\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  function validateLogin() {\n    if(username && username === \"testuser\") {\n      if(password && password === \"test1234\") {\n        setLoggedIn(true)\n        toggleIsOn()\n      }\n    }\n  }\n\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  return (\n    <div>\n        <Modal show={isOn} className=\"todoapp stack-large\" onHide={toggleIsOn}>\n        <Modal.Header>\n          <Modal.Title>Log In</Modal.Title>\n        </Modal.Header>\n        <br/>\n        <Modal.Body>\n        <InputGroup className=\"mb-3\">\n      <div style={{display: \"flex\", flexDirection: \"column\"}}>\n        <FormControl style={{marginBottom: \"10px\"}}\n          onChange={event => setUsername(event.target.value)}\n          placeholder=\"Username\"\n          aria-label=\"Username\"\n          aria-describedby=\"basic-addon1\"\n        />\n        <FormControl\n          onChange={event => setPassword(event.target.value)}\n          placeholder=\"Password\"\n          aria-label=\"Password\"\n          aria-describedby=\"basic-addon1\"\n        />\n      </div>\n      <br/>\n  </InputGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button style={{marginRight: \"10px\"}} variant=\"secondary\" onClick={toggleIsOn}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={() => validateLogin()}>\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal show={isDescriptionVisible || isAboutVisible || isCheckListVisible} className=\"todoapp stack-large\" onHide={toggleIsOn}>\n        <Modal.Header>\n          {isAboutVisible ? <Modal.Title>About</Modal.Title> : null}\n          {isDescriptionVisible ? <Modal.Title>Description</Modal.Title> : null}\n          {isCheckListVisible ? <Modal.Title>Checklist</Modal.Title> : null}\n        </Modal.Header>\n        <br/>\n        <Modal.Body>\n            Test\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => {\n              setDescriptionVisible(false)\n              setAboutVisible(false)\n              setCheckListVisible(false)\n            }}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      {\n        !isOn && !isAboutVisible && !isCheckListVisible && !isDescriptionVisible ?\n        <div className=\"todoapp stack-large\">\n        <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\"}}>\n          <Button disabled={isLoggedin} onClick={toggleIsOn} variant=\"link\">Log in</Button>\n          <Button onClick={() => {isLoggedin ? setAboutVisible(true) : toggleIsOn()} } variant=\"link\">About</Button>\n          <Button onClick={() => {isLoggedin ? setCheckListVisible(true) : toggleIsOn()} } variant=\"link\">Checklist</Button>\n          <Button onClick={() => {isLoggedin ? setDescriptionVisible(true) : toggleIsOn()} } variant=\"link\">Description</Button>\n        </div>\n        <Form addTask={addTask} />\n        <div className=\"filters btn-group stack-exception\">\n          {filterList}\n        </div>\n        <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n          {headingText}\n        </h2>\n        <ul\n          role=\"list\"\n          className=\"todo-list stack-large stack-exception\"\n          aria-labelledby=\"list-heading\"\n        >\n          {taskList}\n        </ul>\n        <br/><br/><span>Ashwin Pilgaonkar</span>\n    </div>\n        :\n        null\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nconst DATA = [\n  { id: \"todo-0\", name: \"Eat\", completed: true },\n  { id: \"todo-1\", name: \"Sleep\", completed: false },\n  { id: \"todo-2\", name: \"Repeat\", completed: false }\n];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DATA} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}